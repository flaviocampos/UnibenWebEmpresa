@using UnibenWeb.Application.ViewModels
@model UnibenWeb.Application.ViewModels.PessoaEnderecoVM

@{
    ViewBag.Title = "Cadastrar Pessoa Física";
}

@*<h2>Create</h2>*@

@Html.AntiForgeryToken()

@*
    if (ViewData.ModelState[""] != null && ViewData.ModelState[""].Errors.Count > 0)
    {
        <div class="alert alert-danger">
            <button type="button" class="close" data-dismiss="alert">x</button>
            <h3>Ops ! Cadastro não concluído: </h3>
            @Html.ValidationSummary(true)
        </div>
    }
*@
<div id="divValidate" class="alert alert-danger" style="display:none;">
    <button type="button" class="close">X</button>
    <h3>Ops ! Cadastro não concluído: </h3>
    @*Html.ValidationSummary(true)*@
</div>

@*Html.ValidationSummary(true)*@

<div class="row">
    @*class="form-horizontal"*@
    @*<h4>Cadastro de Pessoa</h4>*@
    <hr />
    @*Html.ValidationSummary(true, "", new {@class = "text-danger"})*@
    <div class="col-md-12">
        @*Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-2" })*@
        <div class="col-md-10">
            @Html.EditorFor(model => model.Nome, new
   {
       htmlAttributes = new
       {
           @class = "long-textbox",
           placeholder = Html.DisplayNameFor(m => m.Nome),
           Title = "Nome da pessoa",
           data_toggle = "tooltip",
           data_placement = "top"
       }
   })
            @*Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })*@
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Tipo Pessoa", new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(d => d.PessoaTipoId, (IEnumerable<SelectListItem>)ViewBag.PessoaTipos, new { @class = "form-control" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CPF_CNPJ, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CPF_CNPJ, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CPF_CNPJ, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.RG, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.RG, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.RG, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CartaoSUS, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CartaoSUS, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CartaoSUS, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PISPASEP, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PISPASEP, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PISPASEP, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Agencia, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Agencia, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Agencia, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ContaCorrente, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ContaCorrente, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ContaCorrente, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DataNascimento, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DataNascimento, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DataNascimento, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.NacionalidadeId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.NacionalidadeId, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.NacionalidadeId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.NaturalidadeId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.NaturalidadeId, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.NaturalidadeId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group box box-default col-md-8 ">
        @*col-xs-12 col-md-8 col-sm-6*@
        <div class="box-header with-border">
            <h3 class="box-title">Endereço</h3>
            <div class="box-tools pull-right">
                <button class="btn btn-box-tool" data-widget="collapse"><i class="fa fa-minus"></i></button>
            </div><!-- /.box-tools -->

        </div>
        <div id="divDetalhe" class="box-body">
            @*style="display: none"*@
            @Html.Partial("_Endereco")
            <a onclick="Open('Correios')">Open-Correios-Teste</a>
        </div>
    </div>





   








    <div class="col-md-4">
        @Html.Label("Banco", new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(d => d.BancoId, (IEnumerable<SelectListItem>)ViewBag.Bancos, new { @class = "form-control" })
        </div>
    </div>

    <div class="col-md-4">
        @Html.Label("Estado Civil", new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(d => d.EstadoCivilId, (IEnumerable<SelectListItem>)ViewBag.EstadoCivis, new { @class = "form-control" })
        </div>
    </div>

    <div class="col-md-4">
        @Html.Label("Sexo", new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @*
                @Html.EnumDropDownListFor(m => m.SexoId, "Não Informado", new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.SexoId, "", new { @class = "text-danger" })
            *@
            @Html.DropDownListFor(d => d.SexoId, (IEnumerable<SelectListItem>)ViewBag.Sexos, new { @class = "form-control" })
        </div>
    </div>


    <div class="form-group col-md-12">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
            <a href="#" class="btn btn-default" onclick="SalvarPessoa();"> Salvar Pessoa </a>
        </div>
    </div>


    <div class="form-group col-md-12">
        @Html.ActionLink("Back to List", "Index")
    </div>

</div>





@section Scripts {
    <script>
        $('.close').click(function () {
            $('.alert').hide();
        });

        function SalvarPessoa() {
            debugger;
            var nome = $("#Nome").val();
            var cpf_cnpj = $("#CPF_CNPJ").val();
            var sexoid = $("#SexoId").val();
            var dtnasc = $("#DataNascimento").val();
            var pessoatipoid = $("#PessoaTipoId").val();
            var bancoid = $("#BancoId").val();
            var estadocivilid = $("#EstadoCivilId").val();
            var lograd = $("#Logradouro").val();
            // ------
            var token = $('input[name="__RequestVerificationToken"]').val();
            var tokenadr = $('form[action="/Pessoa/Create"] input [name="__RequestVerificationToken"]').val();
            var headers = {};
            var headersadr = {};
            // ------
            headers['__RequestVerificationToken'] = token;
            headersadr['__RequestVerificationToken'] = tokenadr;
            var url = '/Cadastro/Pessoa/Create';
            $.ajax({
                url: url,
                type: "POST",
                datatype: "json",
                headers: headersadr,
                data: {
                    Id: 0,
                    Nome: nome,
                    CPF_CNPJ: cpf_cnpj,
                    SexoId: sexoid,
                    DataNascimento: dtnasc,
                    PessoaTipoId: pessoatipoid,
                    BancoId: bancoid,
                    EstadoCivilId: estadocivilid,
                    Logradouro: lograd,
                    __RequestVerificationToken: token
                },
                success: function (data) {
                    if (data.Resultado > 0) {
                        ListarEnderecos(data.Resultado);
                    } else {
                        for (var i = 0; i < data.Resultado['Erros'].length; i++) {
                            $('#divValidate').append($('<li>', {
                                text: data.Resultado['Erros'][i].Message
                            }));
                            $('#divValidate').show();
                        }
                    }
                },
                error: function (json) {
                    $('#divValidate').empty();
                    for (var i = 0; i < json['responseJSON'].length; i++) {
                        $('#divValidate').append($('<li>', {
                            text: json['responseJSON'][i].errors[0]
                        }));
                        $('#divValidate').show();
                    }
                }
            })
        }

        function ListarEnderecos(IdPessoa) {
            //debugger;
            var url = "/Enderecos/ListarEnderecos";
            $.ajax({
                url: url,
                type: "GET",
                datatype: "html",
                data: { Id: IdPessoa },
                success: function (data) {
                    var divItems = $("#divDetalhe");
                    divItems.empty();
                    divItems.show();
                    divItems.html(data);
                },
                error: function () {
                    alert('Ocorreu um erro!');
                }
            })
        }

        function SalvarEndereco() {
            //debugger;
            var logradouro = $("#Logradouro").val();
            var numero = $("#Numero").val();
            var cep = $("#CEP").val();
            var bairro = $("#Bairro").val();
            var complemento = $("#Complemento").val();
            var idpessoa = $("#idPessoa").val();
            var url = "/Enderecos/SalvarEndereco";
            $.ajax({
                url: url,
                type: "GET",
                datatype: "html",
                data: { Logradouro: logradouro, Numero: numero, CEP: cep, Bairro: bairro, Complemento: complemento, idPessoa: idpessoa },
                success: function (data) {
                    if (data.Resultado > 0) {
                        ListarEnderecos(data.Resultado);
                    } else {
                        alert('Erro no Retorno!');
                    }
                },
                error: function () {
                    alert('Ocorreu um erro!');
                }
            })
        };


    </script>

    @Scripts.Render("~/bundles/jqueryval")
}
