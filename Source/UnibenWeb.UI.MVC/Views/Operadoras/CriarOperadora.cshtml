@model UnibenWeb.Application.ViewModels.OperadoraVm

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>OperadoraVm</h4>
        <hr />

        @*Html.HiddenFor(model => model.PessoaTipoId);*@

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CPF_CNPJ, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CPF_CNPJ, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CPF_CNPJ, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DataNascimento, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DataNascimento, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DataNascimento, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Ativo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Ativo)
                    @Html.ValidationMessageFor(model => model.Ativo, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Agencia, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Agencia, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Agencia, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ContaCorrente, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ContaCorrente, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ContaCorrente, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BancoId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BancoId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BancoId, "", new { @class = "text-danger" })
            </div>
        </div>

        @*
    <div class="form-group">
        @Html.LabelFor(model => model.PessoaTipoId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PessoaTipoId, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PessoaTipoId, "", new { @class = "text-danger" })
        </div>
    </div>
        *@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    <script>

        function SalvarPessoa() {
            debugger;
            var nome = $("#Nome").val();
            var cpf_cnpj = $("#CPF_CNPJ").val();
            var sexoid = $("#SexoId").val();
            var dtnasc = $("#DataNascimento").val();
            var pessoatipoid = $("#PessoaTipoId").val();
            var bancoid = $("#BancoId").val();
            var estadocivilid = $("#EstadoCivilId").val();
            var lograd = $("#Logradouro").val();
            // ------
            var token = $('input[name="__RequestVerificationToken"]').val();
            var tokenadr = $('form[action="/Pessoa/Create"] input [name="__RequestVerificationToken"]').val();
            var headers = {};
            var headersadr = {};
            // ------
            headers['__RequestVerificationToken'] = token;
            headersadr['__RequestVerificationToken'] = tokenadr;
            var url = '/Cadastro/Pessoa/Create';
            $.ajax({
                url: url,
                type: "POST",
                datatype: "json",
                headers: headersadr,
                data: {
                    Id: 0,
                    Nome: nome,
                    CPF_CNPJ: cpf_cnpj,
                    SexoId: sexoid,
                    DataNascimento: dtnasc,
                    PessoaTipoId: pessoatipoid,
                    BancoId: bancoid,
                    EstadoCivilId: estadocivilid,
                    Logradouro: lograd,
                    __RequestVerificationToken: token
                },
                success: function (data) {
                    if (data.Resultado > 0) {
                        ListarEnderecos(data.Resultado);
                    } else {
                        for (var i = 0; i < data.Resultado['Erros'].length; i++) {
                            $('#divValidate').append($('<li>', {
                                text: data.Resultado['Erros'][i].Message
                            }));
                            $('#divValidate').show();
                        }
                    }
                },
                error: function (json) {
                    $('#divValidate').empty();
                    for (var i = 0; i < json['responseJSON'].length; i++) {
                        $('#divValidate').append($('<li>', {
                            text: json['responseJSON'][i].errors[0]
                        }));
                        $('#divValidate').show();
                    }
                }
            })
        }

    </script>
}
